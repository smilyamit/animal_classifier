#1 Reverse orer flow (From coder persception)
  Buid CNN model --> save model -->Prediction ? (with the help of API, as API will take care of Prediction)
  prediction--> API--> how to send input to API--->(using GUI)
  
 #2 User Perception
 Upload the img--> clcik predict---API wil read the input convert into base 64 string---> again converted by API to pixel & save
 locally saved img fed to our model-->Prediction (as per algo)--> send to GUI
 
 #3 API? 
 Building API
 API (related to web) or web api is something which is called over a network (Intranet, Internet)
 Those which is called over a network is called web services
 Who make Webservices: web application development framework make webservices
 Framework-->collection of libraries--> collection of methods --- which helps to build web api
 
 Note: Different things is happening whenever there is interaction of your program (app) with network eg api routing, path 
      generation, temp databse allocation, Secured Socket lay etc which is taken care by built in framework (eg django, flask)
      on which you have createde web api
      
#4 Flask?
 -Light WADF
 -3 important things in any web api (MVC)
 - In flask (MVT)
  1 GUI (template) 2 Backend (view)  3 Model or data based trained model
  
  eg any project like CRM 
  -GUI: For user interaction (In .html file, inside <style> all css code </style>, inside <script> all js code <script>
  -Backend fun (Add customer, update customer, search customer): routing+ business logic
  -model - For answering DB query
  
  * in view(backend): we have routes (its nothing but path for each specific query, eg \add customer)
==>  So when customer click update button (in template) then route (in view) will activate its path to DB model (Model),  
  DB model read the query n search for specific query
  
  #note1 .h5 is used for to save keras trained (learned weights of given model)file in keras
   note2 cors: A Flask extension for handling Cross Origin Resource Sharing (CORS), making cross-origin AJAX possible
         Browser does not allow cross domain AJAX requests due to security issues
         What is a cross origin request?
        -A web application executes a cross-origin HTTP request when it requests a resource that has a different origin 
        (domain, protocol, or port)

#5 Flow of Animal classifier
 clientapp.py (View) ==> index.html (template) ==> clientapp.py ==> model.h5 (model)
 
 steps:
 A client (browser) submits an HTTP request to the server; then the server(app on computer) returns a response to the client
 GET is used to request data from a specified resource
 POST is used to send data to a server to create/update a resource (eg while after uploading img, we clcik predict, it sent
 through http POST request)
 
 As u run clientapp.py u will get a link click to it 
 by default it will send 
 action: empty i.e "/", rememebr forward slash is taken as empty in web services
 Request: GET http method
 then browser will send GET request with empty action
 request/method: GET 
 action : empty
 
 In app.py we have 
 request: GET (inside GET we have def home fun which will render the index.html file)
          render template is a flask method which will generate UI
  - using <form> our GUI interacts with clientapp.py using predict.py (two dot .. is to take file from source)
  action: predict
  request/method: POST
  $ pip freeze > requirements . txt  (to install all require libraries)
  
      
